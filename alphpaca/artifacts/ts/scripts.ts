/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import {
  Address,
  ExecutableScript,
  ExecuteScriptParams,
  ExecuteScriptResult,
  Script,
  SignerProvider,
  HexString,
} from "@alephium/web3";
import { default as BuildtokenScriptJson } from "../scripts/Buildtoken.ral.json";
import { default as BurnScriptJson } from "../scripts/Burn.ral.json";
import { default as BuyvirlScriptJson } from "../scripts/Buyvirl.ral.json";
<<<<<<< Updated upstream
=======
import { default as CancelSwapScriptJson } from "../scripts/CancelSwap.ral.json";
import { default as ConfirmSwapScriptJson } from "../scripts/ConfirmSwap.ral.json";
import { default as CreateScriptJson } from "../scripts/Create.ral.json";
import { default as CreateAlphScriptJson } from "../scripts/CreateAlph.ral.json";
>>>>>>> Stashed changes
import { default as DestroyScriptJson } from "../scripts/Destroy.ral.json";
import { default as DestroyTokenSwapScriptJson } from "../scripts/DestroyTokenSwap.ral.json";
import { default as DestroytokenScriptJson } from "../scripts/Destroytoken.ral.json";
import { default as EditfeeScriptJson } from "../scripts/Editfee.ral.json";
import { default as FeeAlphScriptJson } from "../scripts/FeeAlph.ral.json";
import { default as FeePacaScriptJson } from "../scripts/FeePaca.ral.json";
import { default as GettokenScriptJson } from "../scripts/Gettoken.ral.json";
import { default as ReedeemalphScriptJson } from "../scripts/Reedeemalph.ral.json";
import { default as SellvirlScriptJson } from "../scripts/Sellvirl.ral.json";
import { default as SendoutScriptJson } from "../scripts/Sendout.ral.json";
import { default as TopupScriptJson } from "../scripts/Topup.ral.json";
import { default as WithdrawlassetsScriptJson } from "../scripts/Withdrawlassets.ral.json";

export const Buildtoken = new ExecutableScript<{
  contract: HexString;
  symbol: HexString;
  name: HexString;
  decimals: bigint;
  tokenTotal: bigint;
}>(Script.fromJson(BuildtokenScriptJson));
export const Burn = new ExecutableScript<{
  contract: HexString;
  amount: bigint;
}>(Script.fromJson(BurnScriptJson));
export const Buyvirl = new ExecutableScript<{
  contract: HexString;
  amount: bigint;
}>(Script.fromJson(BuyvirlScriptJson));
<<<<<<< Updated upstream
=======
export const CancelSwap = new ExecutableScript<{ contract: HexString }>(
  Script.fromJson(CancelSwapScriptJson)
);
export const ConfirmSwap = new ExecutableScript<{ contract: HexString }>(
  Script.fromJson(ConfirmSwapScriptJson)
);
export const Create = new ExecutableScript<{
  contract: HexString;
  tokenoffered: HexString;
  tokenofferedamt: bigint;
  tokenwanted: HexString;
  tokenwantedamt: bigint;
}>(Script.fromJson(CreateScriptJson));
export const CreateAlph = new ExecutableScript<{
  contract: HexString;
  tokenoffered: HexString;
  tokenofferedamt: bigint;
  tokenwanted: HexString;
  tokenwantedamt: bigint;
}>(Script.fromJson(CreateAlphScriptJson));
>>>>>>> Stashed changes
export const Destroy = new ExecutableScript<{ contract: HexString }>(
  Script.fromJson(DestroyScriptJson)
);
export const DestroyTokenSwap = new ExecutableScript<{ contract: HexString }>(
  Script.fromJson(DestroyTokenSwapScriptJson)
);
export const Destroytoken = new ExecutableScript<{ contract: HexString }>(
  Script.fromJson(DestroytokenScriptJson)
);
export const Editfee = new ExecutableScript<{
  contract: HexString;
  edit: bigint;
}>(Script.fromJson(EditfeeScriptJson));
export const FeeAlph = new ExecutableScript<{
  contract: HexString;
  amount: bigint;
}>(Script.fromJson(FeeAlphScriptJson));
export const FeePaca = new ExecutableScript<{
  contract: HexString;
  amount: bigint;
}>(Script.fromJson(FeePacaScriptJson));
export const Gettoken = new ExecutableScript<{
  contract: HexString;
  amount: bigint;
}>(Script.fromJson(GettokenScriptJson));
export const Reedeemalph = new ExecutableScript<{
  contract: HexString;
  amount: bigint;
}>(Script.fromJson(ReedeemalphScriptJson));
export const Sellvirl = new ExecutableScript<{
  contract: HexString;
  amount: bigint;
}>(Script.fromJson(SellvirlScriptJson));
export const Sendout = new ExecutableScript<{
  contract: HexString;
  amount: bigint;
}>(Script.fromJson(SendoutScriptJson));
export const Topup = new ExecutableScript<{
  contract: HexString;
  amount: bigint;
}>(Script.fromJson(TopupScriptJson));
<<<<<<< Updated upstream
=======
export const Withdrawlassets = new ExecutableScript<{ contract: HexString }>(
  Script.fromJson(WithdrawlassetsScriptJson)
);
>>>>>>> Stashed changes
